//#include<iostream>
//#include<math.h>
//#include<fstream>
//
//using namespace std;
//#define F(x) ((float)x)
//float ndx_vgapal[256][3] = {
//    /* colors 0-15 */
//    {F(0x00), F(0x00), F(0x00)},
//
//    {F(0x00), F(0x00), F(0xAA)},
//    {F(0x00), F(0xAA), F(0x00)},
//    {F(0x00), F(0xAA), F(0xAA)},
//    {F(0xAA), F(0x00), F(0x00)},
//    {F(0xAA), F(0x00), F(0xAA)},
//
//    {F(0xAA), F(0x55), F(0x00)},
//    {F(0xAA), F(0xAA), F(0xAA)},
//    {F(0x55), F(0x55), F(0x55)},
//    {F(0x55), F(0x55), F(0xFF)},
//    {F(0x55), F(0xFF), F(0x55)},
//
//    {F(0x55), F(0xFF), F(0xFF)},
//    {F(0xFF), F(0x55), F(0x55)},
//    {F(0xFF), F(0x55), F(0xFF)},
//    {F(0xFF), F(0xFF), F(0x55)},
//    {F(0xFF), F(0xFF), F(0xFF)},
//
//    /* grayscale 16-31 (non gamma corrected) */
//    {F(0x00), F(0x00), F(0x00)},
//    {F(0x14), F(0x14), F(0x14)},
//    {F(0x20), F(0x20), F(0x20)},
//    {F(0x2C), F(0x2C), F(0x2C)},
//    {F(0x38), F(0x38), F(0x38)},
//
//    {F(0x45), F(0x45), F(0x45)},
//    {F(0x51), F(0x51), F(0x51)},
//    {F(0x61), F(0x61), F(0x61)},
//    {F(0x71), F(0x71), F(0x71)},
//    {F(0x82), F(0x82), F(0x82)},
//
//    {F(0x92), F(0x92), F(0x92)},
//    {F(0xA2), F(0xA2), F(0xA2)},
//    {F(0xB6), F(0xB6), F(0xB6)},
//    {F(0xCB), F(0xCB), F(0xCB)},
//    {F(0xE3), F(0xE3), F(0xE3)},
//
//    {F(0xFF), F(0xFF), F(0xFF)},
//    // HERE ------> 1
//    /* hue mix 32-55 (1) */
//    {F(0x00), F(0x00), F(0xFF)},
//    {F(0x41), F(0x00), F(0xFF)},
//    {F(0x7D), F(0x00), F(0xFF)},
//    {F(0xBE), F(0x00), F(0xFF)},
//
//    {F(0xFF), F(0x00), F(0xFF)},
//    {F(0xFF), F(0x00), F(0xBE)},
//    {F(0xFF), F(0x00), F(0x7D)},
//    {F(0xFF), F(0x00), F(0x41)},
//    {F(0xFF), F(0x00), F(0x00)},
//
//    {F(0xFF), F(0x41), F(0x00)},
//    {F(0xFF), F(0x7D), F(0x00)},
//    {F(0xFF), F(0xBE), F(0x00)},
//    {F(0xFF), F(0xFF), F(0x00)},
//    {F(0xBE), F(0xFF), F(0x00)},
//
//    {F(0x7D), F(0xFF), F(0x00)},
//    {F(0x41), F(0xFF), F(0x00)},
//    {F(0x00), F(0xFF), F(0x00)},
//    {F(0x00), F(0xFF), F(0x41)},
//    {F(0x00), F(0xFF), F(0x7D)},
//
//    {F(0x00), F(0xFF), F(0xBE)},
//    {F(0x00), F(0xFF), F(0xFF)},
//    {F(0x00), F(0xBE), F(0xFF)},
//    {F(0x00), F(0x7D), F(0xFF)},
//    {F(0x00), F(0x41), F(0xFF)},
//
//    /* hue mix 56-79 (2) */
//    {F(0x7D), F(0x7D), F(0xFF)},
//    {F(0x9E), F(0x7D), F(0xFF)},
//    {F(0xBE), F(0x7D), F(0xFF)},
//    {F(0xDF), F(0x7D), F(0xFF)},
//    {F(0xFF), F(0x7D), F(0xFF)},
//
//    {F(0xFF), F(0x7D), F(0xDF)},
//    {F(0xFF), F(0x7D), F(0xBE)},
//    {F(0xFF), F(0x7D), F(0x9E)},
//    {F(0xFF), F(0x7D), F(0x7D)},
//    {F(0xFF), F(0x9E), F(0x7D)},
//
//    {F(0xFF), F(0xBE), F(0x7D)},
//    {F(0xFF), F(0xDF), F(0x7D)},
//    {F(0xFF), F(0xFF), F(0x7D)},
//    {F(0xDF), F(0xFF), F(0x7D)},
//    {F(0xBE), F(0xFF), F(0x7D)},
//
//    {F(0x9E), F(0xFF), F(0x7D)},
//    {F(0x7D), F(0xFF), F(0x7D)},
//    {F(0x7D), F(0xFF), F(0x9E)},
//    {F(0x7D), F(0xFF), F(0xBE)},
//    {F(0x7D), F(0xFF), F(0xDF)},
//
//    {F(0x7D), F(0xFF), F(0xFF)},
//    {F(0x7D), F(0xDF), F(0xFF)},
//    {F(0x7D), F(0xBE), F(0xFF)},
//    {F(0x7D), F(0x9E), F(0xFF)},
//    /* hue mix 80-103 (3) */
//    {F(0xB6), F(0xB6), F(0xFF)},
//
//    {F(0xC7), F(0xB6), F(0xFF)},
//    {F(0xDB), F(0xB6), F(0xFF)},
//    {F(0xEB), F(0xB6), F(0xFF)},
//    {F(0xFF), F(0xB6), F(0xFF)},
//    {F(0xFF), F(0xB6), F(0xEB)},
//
//    {F(0xFF), F(0xB6), F(0xDB)},
//    {F(0xFF), F(0xB6), F(0xC7)},
//    {F(0xFF), F(0xB6), F(0xB6)},
//    {F(0xFF), F(0xC7), F(0xB6)},
//    {F(0xFF), F(0xDB), F(0xB6)},
//
//    {F(0xFF), F(0xEB), F(0xB6)},
//    {F(0xFF), F(0xFF), F(0xB6)},
//    {F(0xEB), F(0xFF), F(0xB6)},
//    {F(0xDB), F(0xFF), F(0xB6)},
//    {F(0xC7), F(0xFF), F(0xB6)},
//
//    {F(0xB6), F(0xFF), F(0xB6)},
//    {F(0xB6), F(0xFF), F(0xC7)},
//    {F(0xB6), F(0xFF), F(0xDB)},
//    {F(0xB6), F(0xFF), F(0xEB)},
//    {F(0xB6), F(0xFF), F(0xFF)},
//
//    {F(0xB6), F(0xEB), F(0xFF)},
//    {F(0xB6), F(0xDB), F(0xFF)},
//    {F(0xB6), F(0xC7), F(0xFF)},
//    // HERE ------> 2
//    /* hue mix 104-127 (4) dark 1 */
//    {F(0x00), F(0x00), F(0x71)},
//    {F(0x1C), F(0x00), F(0x71)},
//    {F(0x38), F(0x00), F(0x71)},
//    {F(0x55), F(0x00), F(0x71)},
//
//    {F(0x71), F(0x00), F(0x71)},
//    {F(0x71), F(0x00), F(0x55)},
//    {F(0x71), F(0x00), F(0x38)},
//    {F(0x71), F(0x00), F(0x1C)},
//    {F(0x71), F(0x00), F(0x00)},
//
//    {F(0x71), F(0x1C), F(0x00)},
//    {F(0x71), F(0x38), F(0x00)},
//    {F(0x71), F(0x55), F(0x00)},
//    {F(0x71), F(0x71), F(0x00)},
//    {F(0x55), F(0x71), F(0x00)},
//
//    {F(0x38), F(0x71), F(0x00)},
//    {F(0x1C), F(0x71), F(0x00)},
//    {F(0x00), F(0x71), F(0x00)},
//    {F(0x00), F(0x71), F(0x1C)},
//    {F(0x00), F(0x71), F(0x38)},
//
//    {F(0x00), F(0x71), F(0x55)},
//    {F(0x00), F(0x71), F(0x71)},
//    {F(0x00), F(0x55), F(0x71)},
//    {F(0x00), F(0x38), F(0x71)},
//    {F(0x00), F(0x1C), F(0x71)},
//
//    /* hue mix 56-79 (2) */
//    {F(0x38), F(0x38), F(0x71)},
//    {F(0x45), F(0x38), F(0x71)},
//    {F(0x55), F(0x38), F(0x71)},
//    {F(0x61), F(0x38), F(0x71)},
//    {F(0x71), F(0x38), F(0x71)},
//
//    {F(0x71), F(0x38), F(0x61)},
//    {F(0x71), F(0x38), F(0x55)},
//    {F(0x71), F(0x38), F(0x45)},
//    {F(0x71), F(0x38), F(0x38)},
//    {F(0x71), F(0x45), F(0x38)},
//
//    {F(0x71), F(0x55), F(0x38)},
//    {F(0x71), F(0x61), F(0x38)},
//    {F(0x71), F(0x71), F(0x38)},
//    {F(0x61), F(0x71), F(0x38)},
//    {F(0x55), F(0x71), F(0x38)},
//
//    {F(0x45), F(0x71), F(0x38)},
//    {F(0x38), F(0x71), F(0x38)},
//    {F(0x38), F(0x71), F(0x45)},
//    {F(0x38), F(0x71), F(0x55)},
//    {F(0x38), F(0x71), F(0x61)},
//
//    {F(0x38), F(0x71), F(0x71)},
//    {F(0x38), F(0x61), F(0x71)},
//    {F(0x38), F(0x55), F(0x71)},
//    {F(0x38), F(0x45), F(0x71)},
//    /* hue mix 80-103 (3) */
//    {F(0x51), F(0x51), F(0x71)},
//
//    {F(0x59), F(0x51), F(0x71)},
//    {F(0x61), F(0x51), F(0x71)},
//    {F(0x69), F(0x51), F(0x71)},
//    {F(0x71), F(0x51), F(0x71)},
//    {F(0x71), F(0x51), F(0x69)},
//
//    {F(0x71), F(0x51), F(0x61)},
//    {F(0x71), F(0x51), F(0x59)},
//    {F(0x71), F(0x51), F(0x51)},
//    {F(0x71), F(0x59), F(0x51)},
//    {F(0x71), F(0x61), F(0x51)},
//
//    {F(0x71), F(0x69), F(0x51)},
//    {F(0x71), F(0x71), F(0x51)},
//    {F(0x69), F(0x71), F(0x51)},
//    {F(0x61), F(0x71), F(0x51)},
//    {F(0x59), F(0x71), F(0x51)},
//
//    {F(0x51), F(0x71), F(0x51)},
//    {F(0x51), F(0x71), F(0x59)},
//    {F(0x51), F(0x71), F(0x61)},
//    {F(0x51), F(0x71), F(0x69)},
//    {F(0x51), F(0x71), F(0x71)},
//
//    {F(0x51), F(0x69), F(0x71)},
//    {F(0x51), F(0x61), F(0x71)},
//    {F(0x51), F(0x59), F(0x71)},
//    // HERE ------> 3
//    /* hue mix 104-127 (4) dark 1 */
//    {F(0x00), F(0x00), F(0x41)},
//    {F(0x10), F(0x00), F(0x41)},
//    {F(0x20), F(0x00), F(0x41)},
//    {F(0x30), F(0x00), F(0x41)},
//
//    {F(0x41), F(0x00), F(0x41)},
//    {F(0x41), F(0x00), F(0x30)},
//    {F(0x41), F(0x00), F(0x20)},
//    {F(0x41), F(0x00), F(0x10)},
//    {F(0x41), F(0x00), F(0x00)},
//
//    {F(0x41), F(0x10), F(0x00)},
//    {F(0x41), F(0x20), F(0x00)},
//    {F(0x41), F(0x30), F(0x00)},
//    {F(0x41), F(0x41), F(0x00)},
//    {F(0x30), F(0x41), F(0x00)},
//
//    {F(0x20), F(0x41), F(0x00)},
//    {F(0x10), F(0x41), F(0x00)},
//    {F(0x00), F(0x41), F(0x00)},
//    {F(0x00), F(0x41), F(0x10)},
//    {F(0x00), F(0x41), F(0x20)},
//
//    {F(0x00), F(0x41), F(0x30)},
//    {F(0x00), F(0x41), F(0x41)},
//    {F(0x00), F(0x30), F(0x41)},
//    {F(0x00), F(0x20), F(0x41)},
//    {F(0x00), F(0x10), F(0x41)},
//
//    /* hue mix 56-79 (2) */
//    {F(0x20), F(0x20), F(0x41)},
//    {F(0x28), F(0x20), F(0x41)},
//    {F(0x30), F(0x20), F(0x41)},
//    {F(0x3C), F(0x20), F(0x41)},
//    {F(0x41), F(0x20), F(0x41)},
//
//    {F(0x41), F(0x20), F(0x3C)},
//    {F(0x41), F(0x20), F(0x30)},
//    {F(0x41), F(0x20), F(0x28)},
//    {F(0x41), F(0x20), F(0x20)},
//    {F(0x41), F(0x28), F(0x20)},
//
//    {F(0x41), F(0x30), F(0x20)},
//    {F(0x41), F(0x3C), F(0x20)},
//    {F(0x41), F(0x41), F(0x20)},
//    {F(0x3C), F(0x41), F(0x20)},
//    {F(0x30), F(0x41), F(0x20)},
//
//    {F(0x28), F(0x41), F(0x20)},
//    {F(0x20), F(0x41), F(0x20)},
//    {F(0x20), F(0x41), F(0x28)},
//    {F(0x20), F(0x41), F(0x30)},
//    {F(0x20), F(0x41), F(0x3C)},
//
//    {F(0x20), F(0x41), F(0x41)},
//    {F(0x20), F(0x3C), F(0x41)},
//    {F(0x20), F(0x30), F(0x41)},
//    {F(0x20), F(0x28), F(0x41)},
//    /* hue mix 80-103 (3) */
//    {F(0x2C), F(0x2C), F(0x41)},
//
//    {F(0x30), F(0x2C), F(0x41)},
//    {F(0x34), F(0x2C), F(0x41)},
//    {F(0x3C), F(0x2C), F(0x41)},
//    {F(0x41), F(0x2C), F(0x41)},
//    {F(0x41), F(0x2C), F(0x3C)},
//
//    {F(0x41), F(0x2C), F(0x34)},
//    {F(0x41), F(0x2C), F(0x30)},
//    {F(0x41), F(0x2C), F(0x2C)},
//    {F(0x41), F(0x30), F(0x2C)},
//    {F(0x41), F(0x34), F(0x2C)},
//
//    {F(0x41), F(0x3C), F(0x2C)},
//    {F(0x41), F(0x41), F(0x2C)},
//    {F(0x3C), F(0x41), F(0x2C)},
//    {F(0x34), F(0x41), F(0x2C)},
//    {F(0x30), F(0x41), F(0x2C)},
//
//    {F(0x2C), F(0x41), F(0x2C)},
//    {F(0x2C), F(0x41), F(0x30)},
//    {F(0x2C), F(0x41), F(0x34)},
//    {F(0x2C), F(0x41), F(0x3C)},
//    {F(0x2C), F(0x41), F(0x41)},
//
//    {F(0x2C), F(0x3C), F(0x41)},
//    {F(0x2C), F(0x34), F(0x41)},
//    {F(0x2C), F(0x30), F(0x41)},
//
//    /* all black */
//    {F(0), F(0), F(0)},
//    {F(0), F(0), F(0)},
//    {F(0), F(0), F(0)},
//    {F(0), F(0), F(0)},
//
//    {F(0), F(0), F(0)},
//    {F(0), F(0), F(0)},
//    {F(0), F(0), F(0)},
//    {F(0), F(0), F(0)},
//
//};
//
//uint8_t rgb2vga(int r, int g, int b) {
//    float rf = (float)r, gf = (float)g, bf = (float)b;
//    float closest = +INFINITY;
//    int ndx = 0, done = 0;
//    for (int i = 0; i < 248; i++) {
//        //    if (done) continue;
//        float* sample = ndx_vgapal[i];
//        float rs = sample[0];
//        float gs = sample[1];
//        float bs = sample[2];
//        float dst =
//            sqrt(powf(rs - rf, 2.0) + powf(gs - gf, 2.0) + powf(bs - bf, 2.0));
//        //   #pragma omp critical
//        {
//            if (closest > dst) {
//                closest = dst;
//                ndx = i;
//            }
//            else if (dst < 0.05) {
//                done = 1;
//                ndx = i;
//                break;
//            }
//        }
//    }
//    return (uint8_t)ndx;
//}
//int main() {
//	ifstream fopen;
//	ofstream fout;
//    fopen.open("RGB.bmp",ios::in,ios::binary);
//	if (!fopen.is_open()) {
//		cout<<"Error opening file"<<endl;
//		return 0;
//	}
//	const int fileHeaderSize = 14;
//	const int InformationHeaderSize = 40;
//
//	unsigned char fileHeader[fileHeaderSize];
//	fopen.read(reinterpret_cast<char*>(fileHeader), fileHeaderSize);
//	unsigned char InformationHeader[InformationHeaderSize];
//	fopen.read(reinterpret_cast<char*>(InformationHeader), InformationHeaderSize);
//
//	int filesize = fileHeader[2] + (fileHeader[3]<<8)+(fileHeader[4]<<16)+(fileHeader[5]<<24);
//	int width = InformationHeader[4] + (InformationHeader[5]<<8)+(InformationHeader[6]<<16)+(InformationHeader[7]<<24);
//	int height = InformationHeader[8] + (InformationHeader[9]<<8)+(InformationHeader[10]<<16)+(InformationHeader[11]<<24);
//	for(int y=0;y<height;y++)
//		for (int x = 0; x < width; x++) {
//			unsigned char color[3];
//			fopen.read(reinterpret_cast<char*>(color), 3);
//			int r = color[2];
//			int g = color[1];
//			int b = color[0];
//
//			cout << rgb2vga(r, g, b);
//		}
//}